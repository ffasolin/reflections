- learnt how to use diff to compare files
- -u makes it easier to read, so
- diff -u <file name> <file name>


How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    showed me possible typos and such

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    because looking for stuff manually is too time consuming
    because you can reverse, see how you got there, check changes for debugging etc

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

	pros that you choose specifically when a commit is necessary
    cons that you clutter commits history and gets lost trying to get back where it went wrong


Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    some changes are related, so having different files commit at the same time helps keep track of whats been changed ans why

How can you use the commands git log and git diff to view the history of files?

    git log will show you all commits
    git diff will compare 2 files

How might using version control make you more confident to make changes that
could break something?

    because you can check the history with git log and compare commits to see what was changed exactly and go back to any previous commit

Now that you have your workspace set up, what do you want to try using Git for?

    I want to use Git to manage my projects, which currently don't exist